var app = angular.module('CosmicEncounter', ['ngRoute']);

app.config(['$routeProvider',
  function($routeProvider) {
    $routeProvider.
      when('/', {
        templateUrl: '../views/search.html',
        controller: 'SearchController'
      }).
      otherwise({
        redirectTo: '/'
      });
  }
]);

app.service('AlienService', function(){
  return {
    aliens: function(){
      return <%= File.read('source/javascripts/races.json') %>
        .filter(function(alien) {
          return alien.flare.wild.player !== "";
        })
        .sort(function(a, b){
          return a.original_name > b.original_name ? 1 : -1
        });
    },
    parameterize: function(alienName){
      return alienName.toLowerCase().trim().replace(' ', '-');
    },
    findAlien: function(alienName){
      return this.aliens().filter(function(item, index, array){
        return this.parameterize(item.original_name) == alienName
      }, this)[0];
    }
  }
});

app.controller('SearchController', function ($scope, AlienService) {
  $scope.race = undefined;
  $scope.currentSelectedFlare = undefined;
  $scope.aliens = AlienService.aliens();
  $scope.parameterize = AlienService.parameterize;
  $scope.selectedFlares = [];

  $scope.submitFlare = function() {
    if ($scope.currentSelectedFlare !== undefined) {
      $scope.selectedFlares.push($scope.currentSelectedFlare);
    }
  }

  $scope.flarePower = function(flareRace) {
    return $scope.race.name === flareRace.name ?
      flareRace.flare.super :
      flareRace.flare.wild;
  }

  $scope.removeFlare = function(flareRace) {
    var index = $scope.selectedFlares.findIndex(function(element) {
      return flareRace === element.original_name
    } )

    $scope.selectedFlares.splice(index, 1);
  }
});
